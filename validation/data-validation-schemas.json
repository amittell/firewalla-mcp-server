{
  "phase2_validation_schemas": {
    "description": "JSON schemas for validating Phase 2 API responses",
    "version": "1.0.0",
    
    "statistics_api": {
      "get_simple_statistics": {
        "type": "object",
        "required": ["statistics", "summary"],
        "properties": {
          "statistics": {
            "type": "object",
            "required": ["online_boxes", "offline_boxes", "total_boxes", "total_alarms", "total_rules", "box_availability"],
            "properties": {
              "online_boxes": { "type": "number", "minimum": 0 },
              "offline_boxes": { "type": "number", "minimum": 0 },
              "total_boxes": { "type": "number", "minimum": 0 },
              "total_alarms": { "type": "number", "minimum": 0 },
              "total_rules": { "type": "number", "minimum": 0 },
              "box_availability": { "type": "number", "minimum": 0, "maximum": 100 }
            }
          },
          "summary": {
            "type": "object",
            "required": ["status", "health_score", "active_monitoring"],
            "properties": {
              "status": { "type": "string", "enum": ["operational", "offline"] },
              "health_score": { "type": "number", "minimum": 0, "maximum": 100 },
              "active_monitoring": { "type": "boolean" }
            }
          }
        }
      },
      
      "get_statistics_by_region": {
        "type": "object",
        "required": ["total_regions", "regional_statistics", "top_regions"],
        "properties": {
          "total_regions": { "type": "number", "minimum": 0 },
          "regional_statistics": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["country_code", "flow_count", "percentage"],
              "properties": {
                "country_code": { "type": "string" },
                "flow_count": { "type": "number", "minimum": 0 },
                "percentage": { "type": "number", "minimum": 0, "maximum": 100 }
              }
            }
          },
          "top_regions": {
            "type": "array",
            "maxItems": 5,
            "items": {
              "type": "object",
              "required": ["country_code", "flow_count"],
              "properties": {
                "country_code": { "type": "string" },
                "flow_count": { "type": "number", "minimum": 0 }
              }
            }
          }
        }
      },
      
      "get_statistics_by_box": {
        "type": "object",
        "required": ["total_boxes", "box_statistics", "summary"],
        "properties": {
          "total_boxes": { "type": "number", "minimum": 0 },
          "box_statistics": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["box_id", "name", "model", "status", "version", "location", "device_count", "rule_count", "alarm_count", "activity_score", "last_seen"],
              "properties": {
                "box_id": { "type": "string" },
                "name": { "type": "string" },
                "model": { "type": "string" },
                "status": { "type": "string", "enum": ["online", "offline"] },
                "version": { "type": "string" },
                "location": { "type": "string" },
                "device_count": { "type": "number", "minimum": 0 },
                "rule_count": { "type": "number", "minimum": 0 },
                "alarm_count": { "type": "number", "minimum": 0 },
                "activity_score": { "type": "number", "minimum": 0 },
                "last_seen": { "type": "string", "format": "date-time" }
              }
            }
          },
          "summary": {
            "type": "object",
            "required": ["online_boxes", "total_devices", "total_rules", "total_alarms"],
            "properties": {
              "online_boxes": { "type": "number", "minimum": 0 },
              "total_devices": { "type": "number", "minimum": 0 },
              "total_rules": { "type": "number", "minimum": 0 },
              "total_alarms": { "type": "number", "minimum": 0 }
            }
          }
        }
      }
    },
    
    "trends_api": {
      "get_flow_trends": {
        "type": "object",
        "required": ["period", "interval_seconds", "data_points", "trends", "summary"],
        "properties": {
          "period": { "type": "string", "enum": ["1h", "24h", "7d", "30d"] },
          "interval_seconds": { "type": "number", "minimum": 60, "maximum": 86400 },
          "data_points": { "type": "number", "minimum": 0 },
          "trends": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["timestamp", "timestamp_iso", "flow_count"],
              "properties": {
                "timestamp": { "type": "number", "minimum": 0 },
                "timestamp_iso": { "type": "string", "format": "date-time" },
                "flow_count": { "type": "number", "minimum": 0 }
              }
            }
          },
          "summary": {
            "type": "object",
            "required": ["total_flows", "avg_flows_per_interval", "peak_flow_count", "min_flow_count"],
            "properties": {
              "total_flows": { "type": "number", "minimum": 0 },
              "avg_flows_per_interval": { "type": "number", "minimum": 0 },
              "peak_flow_count": { "type": "number", "minimum": 0 },
              "min_flow_count": { "type": "number", "minimum": 0 }
            }
          }
        }
      },
      
      "get_alarm_trends": {
        "type": "object",
        "required": ["period", "data_points", "trends", "summary"],
        "properties": {
          "period": { "type": "string", "enum": ["1h", "24h", "7d", "30d"] },
          "data_points": { "type": "number", "minimum": 0 },
          "trends": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["timestamp", "timestamp_iso", "alarm_count"],
              "properties": {
                "timestamp": { "type": "number", "minimum": 0 },
                "timestamp_iso": { "type": "string", "format": "date-time" },
                "alarm_count": { "type": "number", "minimum": 0 }
              }
            }
          },
          "summary": {
            "type": "object",
            "required": ["total_alarms", "avg_alarms_per_interval", "peak_alarm_count", "intervals_with_alarms", "alarm_frequency"],
            "properties": {
              "total_alarms": { "type": "number", "minimum": 0 },
              "avg_alarms_per_interval": { "type": "number", "minimum": 0 },
              "peak_alarm_count": { "type": "number", "minimum": 0 },
              "intervals_with_alarms": { "type": "number", "minimum": 0 },
              "alarm_frequency": { "type": "number", "minimum": 0, "maximum": 100 }
            }
          }
        }
      },
      
      "get_rule_trends": {
        "type": "object",
        "required": ["period", "data_points", "trends", "summary"],
        "properties": {
          "period": { "type": "string", "enum": ["1h", "24h", "7d", "30d"] },
          "data_points": { "type": "number", "minimum": 0 },
          "trends": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["timestamp", "timestamp_iso", "active_rule_count"],
              "properties": {
                "timestamp": { "type": "number", "minimum": 0 },
                "timestamp_iso": { "type": "string", "format": "date-time" },
                "active_rule_count": { "type": "number", "minimum": 0 }
              }
            }
          },
          "summary": {
            "type": "object",
            "required": ["avg_active_rules", "max_active_rules", "min_active_rules", "rule_stability"],
            "properties": {
              "avg_active_rules": { "type": "number", "minimum": 0 },
              "max_active_rules": { "type": "number", "minimum": 0 },
              "min_active_rules": { "type": "number", "minimum": 0 },
              "rule_stability": { "type": "number", "minimum": 0, "maximum": 100 }
            }
          }
        }
      }
    },
    
    "error_responses": {
      "mcp_error": {
        "type": "object",
        "required": ["content"],
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["type", "text"],
              "properties": {
                "type": { "type": "string", "enum": ["text"] },
                "text": { "type": "string" }
              }
            }
          },
          "isError": { "type": "boolean", "enum": [true] }
        }
      }
    },
    
    "validation_rules": {
      "timestamp_validation": {
        "description": "Timestamps should be Unix seconds (not milliseconds) and ISO strings should be valid",
        "unix_timestamp_range": {
          "minimum": 1600000000,
          "maximum": 2000000000
        },
        "iso_string_pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$"
      },
      
      "calculation_validation": {
        "health_score": {
          "description": "Health score calculation validation",
          "formula": "100 - (offline_ratio * 40) - min(alarms * 2, 30) + min(rules / 10, 10)",
          "constraints": {
            "minimum": 0,
            "maximum": 100,
            "offline_penalty": 40,
            "alarm_penalty_max": 30,
            "rule_bonus_max": 10
          }
        },
        
        "rule_stability": {
          "description": "Rule stability calculation validation",
          "formula": "max(0, min(100, round((1 - variation_percentage) * 100)))",
          "constraints": {
            "minimum": 0,
            "maximum": 100,
            "requires_minimum_datapoints": 2
          }
        },
        
        "percentage_fields": {
          "description": "All percentage fields should sum properly and be within 0-100 range",
          "fields": ["box_availability", "alarm_frequency", "percentage", "rule_stability", "health_score"],
          "constraint": "0 <= value <= 100"
        }
      },
      
      "data_consistency": {
        "totals_match_arrays": {
          "description": "Total counts should match array lengths where applicable",
          "rules": [
            "total_boxes == box_statistics.length",
            "total_regions == regional_statistics.length",
            "data_points == trends.length"
          ]
        },
        
        "summary_aggregations": {
          "description": "Summary fields should match aggregated data",
          "rules": [
            "summary.online_boxes == box_statistics.filter(b => b.status == 'online').length",
            "summary.total_flows == sum(trends.map(t => t.flow_count))",
            "summary.total_alarms == sum(trends.map(t => t.alarm_count))"
          ]
        }
      }
    }
  },
  
  "test_cases": {
    "parameter_validation": {
      "valid_periods": ["1h", "24h", "7d", "30d"],
      "invalid_periods": ["invalid", "1day", "1hour", "1week", "1month", "", null],
      
      "valid_intervals": [60, 300, 1800, 3600, 7200, 86400],
      "invalid_intervals": [30, 45, 100000, -1, 0, null, "invalid"],
      
      "edge_cases": {
        "empty_arguments": {},
        "null_arguments": null,
        "extra_arguments": {"period": "24h", "unknown_param": "value"},
        "wrong_types": {"period": 24, "interval": "3600"}
      }
    },
    
    "performance_benchmarks": {
      "response_time_targets": {
        "get_simple_statistics": "< 2000ms",
        "get_statistics_by_region": "< 3000ms", 
        "get_statistics_by_box": "< 3000ms",
        "get_flow_trends": "< 4000ms",
        "get_alarm_trends": "< 3000ms",
        "get_rule_trends": "< 3000ms"
      },
      
      "caching_expectations": {
        "first_call": "Full API call",
        "second_call": "Should be faster due to caching",
        "cache_ttl": "Based on config.cacheTtl setting"
      }
    }
  }
}