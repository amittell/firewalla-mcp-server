#!/bin/bash
#
# Git hooks setup script for budget-friendly CI/CD
# Run this once after cloning the repository
#
set -e

echo "üöÄ Setting up git hooks for efficient development..."

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# Check if we're in a git repository
if [ ! -d ".git" ]; then
    echo "‚ùå Error: Not in a git repository"
    exit 1
fi

# Check if .githooks directory exists
if [ ! -d ".githooks" ]; then
    echo "‚ùå Error: .githooks directory not found"
    exit 1
fi

# Configure git to use our custom hooks directory
print_info "Configuring git to use .githooks directory..."
git config core.hooksPath .githooks

# Make hooks executable
print_info "Making git hooks executable..."
chmod +x .githooks/*

# Verify the setup
if [ "$(git config core.hooksPath)" = ".githooks" ]; then
    print_success "Git hooks configured successfully!"
else
    echo "‚ùå Error: Failed to configure git hooks"
    exit 1
fi

echo ""
echo "üéâ Setup complete!"
echo ""
echo "üìã What happens now:"
echo "   ‚Ä¢ Pre-commit hook will run automatically before each commit"
echo "   ‚Ä¢ Code formatting, TypeScript, ESLint, and quick tests checked locally"
echo "   ‚Ä¢ Issues caught before pushing = fewer GitHub Actions minutes used"
echo "   ‚Ä¢ Estimated savings: 80% reduction in CI failures"
echo ""
echo "üí∞ Cost benefits:"
echo "   ‚Ä¢ Local checks are FREE (no GitHub Actions minutes used)"
echo "   ‚Ä¢ Only essential checks run in CI for all branches"
echo "   ‚Ä¢ Full test suite only runs on main branch and PRs"
echo "   ‚Ä¢ Expected monthly cost: $0.50-1.00 vs $10-15 without optimization"
echo ""
echo "üîß Next steps:"
echo "   ‚Ä¢ Run 'npm install' if you haven't already"
echo "   ‚Ä¢ Make a test commit to see the hooks in action"
echo "   ‚Ä¢ Check README-CI.md for more details"